   1  ls
    2  mkdir temp
    3  chmod 0400 labsuser.pem 
    4  scp -r labsuser.pem ubuntu@10.16.10.241:/home/ubuntu/resources/codebase_partner/* ~/environment/temp/
    5  scp -r -i labsuser.pem ubuntu@10.16.10.241:/home/ubuntu/resources/codebase_partner/* ~/environment/temp/
    6  mkdir microservices
    7  cd microservices/
    8  mkdir customer employee
    9  ll
   10  cp temp/* 
   11  cd ..
   12  cp -R temp/* microservices/customer/
   13  mv temp/* microservices/employee/
   14  rm temp/
   15  rm -rf temp/
   16  aws codecommit create-repository --repository-name microservices
   17  git config user.name fe
   18  git config --global user.name fe
   19  git config --global user.email febdx33000@gmail.com
   20  cd microservices/
   21  git init
   22  git branch -m dev
   23  git add .
   24  git commit -m "add customer & employee"
   25  git remote add origin https://git-codecommit.us-east-1.amazonaws.com/v1/repos/microservices
   26  git push -u origin dev
   27  cd microservices/customer/views/
   28  ll
   29  rm supplier-add.html 
   30  rm supplier-form-fields.html 
   31  rm supplier-update.html 
   32  ll
   33  cd ..
   34  touch Dockerfile
   35  docker build --tag customer .
   36  docker image ls
   37  dbEndpoint=$(cat ~/environment/microservices/customer/app/config/config.js | grep 'APP_DB_HOST' | cut -d '"' -f2)
   38  echo $dbEndpoint
   39  docker run -d --name customer_1 -p 8080:8080 -e APP_DB_HOST="$dbEndpoint" customer
   40  docker container lis
   41  docker container ls
   42  curl http://localhost:8080
   43  git add .
   44  git commit -m "inital customer microservices check in"
   45  git push -u origin dev
   46  cd ..
   47  cd employee/
   48  ll
   49  cp ../customer/Dockerfile 
   50  cp ..customer/Dockerfile 
   51  cd ..
   52  cd customer/
   53  cp Dockerfile /employee
   54  cp Dockerfile employee
   55  docker container stop customer_1
   56  ll
   57  cp Dockerfile employee
   58  cd ..
   59  cd employee/
   60  ll
   61  cd ..
   62  cd employee/
   63  touch Dockerfile
   64  history
   65  docker run -d --name employee_1 -p 8080:8080 -e APP_DB_HOST="supplierdb.cv6oxm9daqsr.us-east-1.rds.amazonaws.com" employee
   66   docker build --tag employee .
   67  docker image ls
   68  docker run -d --name employee_1 -p 8080:8080 -e APP_DB_HOST="supplierdb.cv6oxm9daqsr.us-east-1.rds.amazonaws.com" employee
   69  docker container ls
   70  git add .
   71  git commit -m "upload employee check in"
   72  git push -u origin dev
voclabs:~/environment $ history
    1  ls
    2  mkdir temp
    3  chmod 0400 labsuser.pem 
    4  scp -r labsuser.pem ubuntu@10.16.10.241:/home/ubuntu/resources/codebase_partner/* ~/environment/temp/
    5  scp -r -i labsuser.pem ubuntu@10.16.10.241:/home/ubuntu/resources/codebase_partner/* ~/environment/temp/
    6  mkdir microservices
    7  cd microservices/
    8  mkdir customer employee
    9  ll
   10  cp temp/* 
   11  cd ..
   12  cp -R temp/* microservices/customer/
   13  mv temp/* microservices/employee/
   14  rm temp/
   15  rm -rf temp/
   16  aws codecommit create-repository --repository-name microservices
   17  git config user.name fe
   18  git config --global user.name fe
   19  git config --global user.email febdx33000@gmail.com
   20  cd microservices/
   21  git init
   22  git branch -m dev
   23  git add .
   24  git commit -m "add customer & employee"
   25  git remote add origin https://git-codecommit.us-east-1.amazonaws.com/v1/repos/microservices
   26  git push -u origin dev
   27  cd microservices/customer/views/
   28  ll
   29  rm supplier-add.html 
   30  rm supplier-form-fields.html 
   31  rm supplier-update.html 
   32  ll
   33  cd ..
   34  touch Dockerfile
   35  docker build --tag customer .
   36  docker image ls
   37  dbEndpoint=$(cat ~/environment/microservices/customer/app/config/config.js | grep 'APP_DB_HOST' | cut -d '"' -f2)
   38  echo $dbEndpoint
   39  docker run -d --name customer_1 -p 8080:8080 -e APP_DB_HOST="$dbEndpoint" customer
   40  docker container lis
   41  docker container ls
   42  curl http://localhost:8080
   43  git add .
   44  git commit -m "inital customer microservices check in"
   45  git push -u origin dev
   46  cd ..
   47  cd employee/
   48  ll
   49  cp ../customer/Dockerfile 
   50  cp ..customer/Dockerfile 
   51  cd ..
   52  cd customer/
   53  cp Dockerfile /employee
   54  cp Dockerfile employee
   55  docker container stop customer_1
   56  ll
   57  cp Dockerfile employee
   58  cd ..
   59  cd employee/
   60  ll
   61  cd ..
   62  cd employee/
   63  touch Dockerfile
   64  history
   65  docker run -d --name employee_1 -p 8080:8080 -e APP_DB_HOST="supplierdb.cv6oxm9daqsr.us-east-1.rds.amazonaws.com" employee
   66   docker build --tag employee .
   67  docker image ls
   68  docker run -d --name employee_1 -p 8080:8080 -e APP_DB_HOST="supplierdb.cv6oxm9daqsr.us-east-1.rds.amazonaws.com" employee
   69  docker container ls
   70  git add .
   71  git commit -m "upload employee check in"
   72  git push -u origin dev
   73  docker container ls
   74  docker container stop employee_1
   75  docker container ls
   76  history
   77   docker build --tag employee .
   78  docker run -d --name employee_1 -p 8080:8080 -e APP_DB_HOST="supplierdb.cv6oxm9daqsr.us-east-1.rds.amazonaws.com" employee
   79  docker container ls -a
   80  docker container rm employee_1
   81  docker run -d --name employee_1 -p 8080:8080 -e APP_DB_HOST="supplierdb.cv6oxm9daqsr.us-east-1.rds.amazonaws.com" employee
   82  docker container ls
   83  history
   84  git add .
   85  git commit -m "upload employee check in"
   86  git push -u origin dev
   87  history
   88  cd microservices/
   89  ss -tlnp
   90  account_id=$(aws sts get-caller-identity |grep Account|cut -d '"' -f4)
   91  echo $account_id
   92  aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $account_id.dkr.ecr.us-east-1.amazonaws.com
   93  cat ~/.docker/config.json 
   94  aws ecr help
   95  aws ecr create-repository help
   96  aws ecr create-repository --repository-name customer
   97  aws ecr create-repository --repository-name employee | jq
   98  yum install jq
   99  sudo yum install jq
  100  aws ecr create-repository --repository-name employee | jq
  101  aws ecr delete-repository --repository-name employee --force
  102  aws ecr create-repository --repository-name employee | jq
  103  docker image ls
  104  account_id=$(aws sts get-caller-identity |grep Account|cut -d '"' -f4)
  105  echo $account_id
  106  docker tag customer:latest $account_id.dkr.ecr.us-east-1.amazonaws.com/customer:latest
  107  docker image ls
  108  docker tag employee:latest $account_id.dkr.ecr.us-east-1.amazonaws.com/employee:latest
  109  docker image ls
  110  docker push 001096220582.dkr.ecr.us-east-1.amazonaws.com/customer
  111  docker push 001096220582.dkr.ecr.us-east-1.amazonaws.com/employee
  112  aws ecr list-images --repository-name customer
  113  aws ecr list-images --repository-name employee
  114  systemctl status docker
  115  cd ..
  116  mkdir deployment
  117  cd deployment/
  118  ll
  119  ls -a
  120  git init
  121  git branch
  122  git branch -m dev
  123  git branch
  124  git config -l
  125  touch taskdef-customer.json
  126  echo $account_id 
  127  aws ecs register-task-definition --cli-input-json "file:///home/ec2-user/environment/deployment/taskdef-customer.json"
  128  history
  129  aws ecr create-repository --repository-name deployment
  130  aws ecs list-task-definitions
  131  aws ecs deregister-task-definition --task-definition <taskDefinitionArn>
  132  aws ecs deregister-task-definition --task-definition arn:aws:ecs:us-east-1:001096220582:task-definition/customer-microservice:14
  133  aws ecs stop-task --cluster microservices-serverlesscluster --task arn:aws:ecs:us-east-1:001096220582:task-definition/customer-microservice:14
  134  aws ecs list-tasks --cluster microservices-serverlesscluster
  135  git init
  136  aws ecs register-task-definition --cli-input-json "file:///home/ec2-user/environment/deployment/taskdef-customer.json"
  137  cp taskdef-customer.json taskdef-employee.json 
  138  aws ecs register-task-definition --cli-input-json "file:///home/ec2-user/environment/deployment/taskdef-employee.json"
  139  touch appspec-customer.yaml
  140  cp appspec-customer.yaml appspec-employee.yaml 
  141  git status
  142  git add .
  143  git commit -m "ajoute appspec et taskdef"
  144  history |grep orig
  145  git remote add origin https://git-codecommit.us-east-1.amazonaws.com/v1/repos/deployment
  146  git config -l
  147  git push -u origin dev
  148  aws codecommit list-repositories --region us-east-1
  149  aws codecommit create-repository --repository-name deployment --region us-east-1
  150  git remote add origin https://git-codecommit.us-east-1.amazonaws.com/v1/repos/deployment
  151  git config -l
  152  git push -u origin dev
  153  history
  154  history |grep codecommit
  155  git remote add origin https://git-codecommit.us-east-1.amazonaws.com/v1/repos/deployment
  156  git log
  157  git config -l
  158  git remote set
  159  history
